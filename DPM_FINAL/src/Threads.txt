While our robot is running aside from the main game, we will need a few threads running as well

MUST BE THREADS
1. Odometer (using the motors and it will use the light sensors to correct itself) ->ALWAYS RUNNING
	-This MUST be a thread,

2. LCD Display
	-We want to display some information ->ALWAYS RUNNING

3. 

----------------------------
|STAGE : 1                  |
|-Debug message 1           |
|-Debug message 2           |
|                           |
|ODOMETER: [x,y,theta]      |
|USSensor: 20               |
|ColorSensor [r,g,b]        |
----------------------------


MAYBE NOT THREADS
1. USSensor (Uses US Sensor and reports distance) -> NOT ALWAYS RUNNING, Does this need to be a thread?
	-We can avoid having this as a thread by in the navigation class, just have the sensor do a single scan/or multiple scans every 10 cm traveled.
	-This way, we know we are traveling somewhere safe, and if we scan and see something we can avoid it
2. ColorSensor (Uses CS and returns RGB value when ordered to) -> NOT ALWAYS RUNNING, Does it need to be a thread?
	-Probably not, only used in a scan and capture routine

3. Navigation (We can have a navigator class that when you say, nav.moveTo(x,y) will move to that position using a variety of tools), will we ever need to intterupt the execution of a moveTo command? Say we did...

while(stillNotAtDest){
	scanReading = us.scan(); //Have the us sensor scan what's in front of us currently

	if(scanReading <20){
		//something is in front of us
		avoidObstacle(); //Launches a wallfollower routine and places us on the other side of obstacle
	}
}

This kind of thing means that navigation doesn't need to be a thread at all